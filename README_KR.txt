https://www.acmicpc.net/problem/14998

위 링크의 풀이내용이다.

체스판에서 나이트를 이용하여 출발지점에서 도착지점까지 가는 최소 이동횟수를 구하는 문제이다.
체스판의 가로, 세로 길이는 8 이상 10억 이하이다.
출발지점과 도착지점의 좌표는 0이상, 체스판 가로, 세로길이 미만이다.
나이트의 움직임은 체스판 밖을 나갈수 없다.

출발지점과 도착지점을 잇는 직선을 빗변으로 가지는 직각 삼각형이 있다고 하자
가로변의 체스칸 개수를 length, 세로변 체스칸 개수를 width이라고 하자
일반적으로 생각하는 경우 최대한 빗변을 따라 움직이는 것이 최단거리일 것이다.
즉, x7 이나 x6 방향으로 움직이는 것이 최단거리로 가는 방향이다.

x7 방향으로 움직이는 횟수를 a, x6 방향으로 움직이는 횟수를 b 라고 하자
이를 통해 a, b, width, length 간의 상관관계를 알수 있다.

2a+b = length-1
a+2b = width-1

라는 것을 알수 있다.
위의 연립방정식을 정리하면

a+b = (width+length-2) / 3
a-b = length-width
a=(2length-width-1)/3
b=(2width-length-1)/3

을 도출할수 있다.
이때 a,b,width,length 은 모두 0이상의 정수이다.
저 4가지 경우를 모두 만족하는 경우를 몇가지 구해보았다.

이를 통해 또다른 규칙을 찾을수 있었는데
length 와 width 중에 작은 것을 N, 큰 것을 M이라고 하자
x7, x6 방향으로만 이동하여 목적지에 도달하는 경우를 '맞아떨어진다' 라고 표현하겠다.
N이 주어졌을때 맞아떨어지는 M의 경우를 구할수 있는데

( N/2 + 2 - N%2 <= M <= 2N - 1 ) ( M 의 등차는 3 )

임을 알 수 있다.

이를 통해 입력받은 width, length 값에 따라 크게 두가지 경우를 생각해 볼수 있는데,
입력받은 M 값이 맞아떨어지는 범위 안에 있는지, 또는 초과했는지로 나눌수 있다.

1)범위 안에 있는 경우
N=4, M=[4,7]
(N,M,movecount)
(4, 4, 2)
(4, 5, 3)
(4, 6, 4)
(4, 7, 3)

N=5, M=[3,6,9]
(N,M,movecount)
(5, 3, 2)
(5, 4, 3)
(5, 5, 4)
(5, 6, 3)
(5, 7, 4)
(5, 8, 5)
(5, 9, 4)

N=6, M=[5,8,11]
(N,M,movecount)
(6, 5, 3)
(6, 6, 4)
(6, 7, 5)
(6, 8, 4)
(6, 9, 5)
(6, 10, 6)
(6, 11, 5)

......

이를 통해 새로운 식을 얻을수 있었다.
restore=(M - (N/2 + 2 - N%2)) / 3
movecount = ( N + (N/2 + 2 - N%2 + 3*restore) - 2) / 3 + (M - (N/2 + 2 - N%2)) % 3

맞아떨어지는 값은 등차가 3이다.
restore 의 의미는 입력받은 M 값에서 맞아떨어지는 최소값을 뺄셈하고 3으로 나눈 몫이다.
restore 을 이용하여 입력받은 M 값과 맞아떨어지는 값 중 가장 가까운 값을 찾을수 있을 것이다.
이때 가장 가까운 값은 M보다 작아야 한다.
그 후, 가장 가까운 맞아떨어지는 위치의 이동횟수에 그 위치로부터 출발점의 거리 만큼을 더하면
최소 이동횟수를 구할수 있다.

2)초과하는 경우
이는 직각 삼각형이 특정 방향으로 길쭉한 모양을 의미하는데
나이트의 움직임으로 특정 방향으로 길쭉하게 움직이는 모양은 아래와 같다.

몇가지 예제를 직접 그려보면 이와 같다.
N=4, M=[4,7]
(N,M,movecount)
(4, 7, 3)
(4, 8, 4)
(4, 9, 5)
(4, 10, 6)
(4, 11, 5)
(4, 12, 6)
(4, 13, 7)
(4, 14, 8)
(4, 15, 7)
...

N=5, M=[3,6,9]
(N,M,movecount)
(5,9,4)
(5,10,5)
(5,11,6)
(5,12,7)
(5,13,6)
(5,14,7)
(5,15,8)
(5,19,9)
(5,20,8)
...

이를 통해 또다른 식을 얻을수 있었다.
maxnum = N-1
movecount = maxnum + 2*(( M - ( 2*N - 1 )) / 4 ) + (( M - ( 2*N - 1 )) % 4 )

maxnum 의 의미는 맞아떨어지는 최댓값일때 최소 이동횟수이며
위의 a,b,width,length 연립방정식에서 얻어낸 것으로

movecount = a + b
a + b = (width + length - 2) / 3
width = N
length = M
M이 가질수 있는 맞아떨어지는 최댓값 = 2*N - 1
a + b = ( N + (2*N - 1) - 2) / 3
=> N - 1
이다.

예제에서 얻은 규칙으로
입력받은 M값에서 맞아떨어지는 최댓값을 빼고 그것을 4로 나누면
나이트가 길쭉하게 움직여야 하는 횟수를 구할수 있다.
길쭉하게 움직이는 행동은 2번에 걸쳐 이동하므로 2를 곱해준다.
2*(( M - ( 2*N - 1 )) / 4 )

거기에 입력받은 M값에서 맞아떨어지는 최댓값을 뺀 것의 4로 나눈 나머지 만큼 더해주면
최소 이동횟수를 구할수 있다.

몇가지 반례가 있는데
N = 1, M = 2
movecount = 3

N = 3, M = 4
movecount = 4

N = 2, M = 2
1) 시작점이 (0,0), 도착점이 (1,1) 이거나 시작점이 (1,1), 도착점이 (0,0) 인 경우
movecount = 4
2) 시작점이 (0,M), 도착점이 (1,M-1) 이거나 시작점이 (1,M-1), 도착점이 (0,M) 인 경우
movecount = 4
3) 시작점이 (N,0), 도착점이 (N-1,1) 이거나 시작점이 (N-1,1), 도착점이 (N,0) 인 경우
movecount = 4
4) 시작점이 (N,M), 도착점이 (N-1,M-1) 이거나 시작점이 (N-1,M-1), 도착점이 (N,M) 인 경우
movecount = 4
5) 그 외의 경우
movecount = 2

이를 통해 구할수 있다.